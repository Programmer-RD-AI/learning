digraph Enhanced_UML_Class_Diagram {
	compound=true concentrate=true dpi=300 fontname=Arial nodesep=0.8 rankdir=TB ranksep=1.0 splines=polyline
	node [fillcolor=white fontname=Arial fontsize=10 margin=0.2 shape=record style=filled]
	edge [fontname=Arial fontsize=8 len=1.2]
	subgraph cluster_0 {
		fillcolor="#E8F4F9" label="Presentation Layer" style="rounded,filled"
		AppointmentView [label="{AppointmentView|- scanner: Scanner\l- appointmentController: AppointmentController\l- patientView: PatientView\l- dermatologistView: DermatologistView\l- treatmentView: TreatmentView\l- timeView: TimeView\l- invoiceView: InvoiceView\l|+ showAppointmentMenu(): void\l+ displayMenu(): void\l+ getUserChoice(): int\l+ scheduleAppointment(): void\l+ viewAllAppointments(): void\l+ updateAppointment(): void\l+ cancelAppointment(): void\l+ completeAppointment(): void\l+ processInvoicePayment(): void\l+ searchAppointment(): void\l}"]
		PatientView [label="{PatientView||+ getPatientDetails(): Patient\l}"]
	}
	subgraph cluster_1 {
		fillcolor="#E8F6F3" label="Service Layer" style="rounded,filled"
		AppointmentService [label="{AppointmentService|- appointmentRepository: AppointmentRepository\l|+ createAppointment(appointment: Appointment): void\l+ listAppointments(): List<Appointment>\l+ updateAppointment(appointment: Appointment): boolean\l+ cancelAppointment(appointmentId: int): boolean\l+ completeAppointment(appointmentId: int): boolean\l+ searchAppointments(criteria: String): List<Appointment>\l}"]
	}
	subgraph cluster_2 {
		fillcolor="#E9F7EF" label="Repository Layer" style="rounded,filled"
		AppointmentRepository [label="{AppointmentRepository|- appointments: List<Appointment>\l|+ save(appointment: Appointment): void\l+ findAll(): List<Appointment>\l+ findById(appointmentId: int): Optional<Appointment>\l+ delete(appointmentId: int): boolean\l+ update(appointment: Appointment): boolean\l}"]
	}
	subgraph cluster_3 {
		fillcolor="#F4ECF7" label="Domain Layer" style="rounded,filled"
		Appointment [label="{Appointment|- appointmentId: int\l- patient: Patient\l- dermatologist: DermatologistModel\l- treatment: Treatment\l- time: Time\l- invoice: Invoice\l- status: AppointmentStatus\l|+ setStatus(status: AppointmentStatus): void\l+ getInvoice(): Invoice\l+ getId(): int\l}"]
	}
	AppointmentView -> AppointmentService [label="" arrowhead=vee dir=forward]
	AppointmentService -> AppointmentRepository [label="" arrowhead=vee dir=forward]
	Appointment -> Patient [label="" arrowtail=odiamond dir=both]
}
